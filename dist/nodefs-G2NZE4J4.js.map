{"version":3,"sources":["../src/fs/nodefs.ts"],"sourcesContent":["import * as fs from \"fs\";\nimport * as path from \"path\";\nimport { FilesystemBase } from \"./types.js\";\nimport { PGDATA } from \"./index.js\";\nimport { initDb } from \"../initdb.js\";\nimport loadPgShare from \"../../release/share.js\";\nimport type { EmPostgres } from \"../../release/postgres.js\";\nimport { nodeValues } from \"../utils.js\";\nimport type { DebugLevel } from \"../index.js\";\n\nexport class NodeFS extends FilesystemBase {\n  protected rootDir: string;\n\n  constructor(dataDir: string) {\n    super(dataDir);\n    this.rootDir = path.resolve(dataDir);\n  }\n\n  async init(debug?: DebugLevel) {\n    if (!this.dataDir) {\n      throw new Error(\"No datadir specified\");\n    }\n    if (fs.existsSync(path.join(this.dataDir!, \"PG_VERSION\"))) {\n      return false;\n    }\n    fs.mkdirSync(this.dataDir);\n    await initDb(this.dataDir, debug);\n    return true;\n  }\n\n  async emscriptenOpts(opts: Partial<EmPostgres>) {\n    const options: Partial<EmPostgres> = {\n      ...opts,\n      preRun: [\n        ...(opts.preRun || []),\n        (mod: any) => {\n          const nodefs = mod.FS.filesystems.NODEFS;\n          mod.FS.mkdir(PGDATA);\n          mod.FS.mount(nodefs, { root: this.rootDir }, PGDATA);\n        },\n      ],\n    };\n    const { require } = await nodeValues();\n    loadPgShare(options, require);\n    return options;\n  }\n}\n"],"mappings":"2EAAAA,IAAA,UAAYC,MAAQ,KACpB,UAAYC,MAAU,OASf,IAAMC,EAAN,cAAqBC,CAAe,CAGzC,YAAYC,EAAiB,CAC3B,MAAMA,CAAO,EACb,KAAK,QAAe,UAAQA,CAAO,CACrC,CAEA,MAAM,KAAKC,EAAoB,CAC7B,GAAI,CAAC,KAAK,QACR,MAAM,IAAI,MAAM,sBAAsB,EAExC,OAAO,aAAgB,OAAK,KAAK,QAAU,YAAY,CAAC,EAC/C,IAEN,YAAU,KAAK,OAAO,EACzB,MAAMC,EAAO,KAAK,QAASD,CAAK,EACzB,GACT,CAEA,MAAM,eAAeE,EAA2B,CAC9C,IAAMC,EAA+B,CACnC,GAAGD,EACH,OAAQ,CACN,GAAIA,EAAK,QAAU,CAAC,EACnBE,GAAa,CACZ,IAAMC,EAASD,EAAI,GAAG,YAAY,OAClCA,EAAI,GAAG,MAAME,CAAM,EACnBF,EAAI,GAAG,MAAMC,EAAQ,CAAE,KAAM,KAAK,OAAQ,EAAGC,CAAM,CACrD,CACF,CACF,EACM,CAAE,QAAAC,CAAQ,EAAI,MAAMC,EAAW,EACrC,OAAAC,EAAYN,EAASI,CAAO,EACrBJ,CACT,CACF","names":["init_buffer","fs","path","NodeFS","FilesystemBase","dataDir","debug","initDb","opts","options","mod","nodefs","PGDATA","require","nodeValues","share_default"]}