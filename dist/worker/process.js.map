{"version":3,"sources":["../../src/worker/process.ts"],"sourcesContent":["import * as Comlink from \"comlink\";\nimport { PGlite } from \"../index.js\";\nimport type { PGliteOptions, QueryOptions } from \"../interface.js\";\n\nlet db: PGlite;\n\nconst worker = {\n  async init(\n    dataDir?: string,\n    options?: PGliteOptions,\n    onNotification?: (channel: string, payload: string) => void,\n  ) {\n    db = new PGlite(dataDir, options);\n    await db.waitReady;\n    if (onNotification) {\n      db.onNotification(onNotification);\n    }\n    return true;\n  },\n  async close() {\n    await db.close();\n  },\n  async query(query: string, params?: any[], options?: QueryOptions) {\n    return await db.query(query, params, options);\n  },\n  async exec(query: string, options?: QueryOptions) {\n    return await db.exec(query, options);\n  },\n  async transaction(callback: (tx: any) => Promise<any>) {\n    return await db.transaction((tx) => {\n      return callback(Comlink.proxy(tx));\n    });\n  },\n  async execProtocol(message: Uint8Array) {\n    return await db.execProtocol(message);\n  },\n};\n\nComlink.expose(worker);\n\nexport type Worker = typeof worker;\n"],"mappings":"wHAAAA,IAIA,IAAIC,EAEEC,EAAS,CACb,MAAM,KACJC,EACAC,EACAC,EACA,CACA,OAAAJ,EAAK,IAAIK,EAAOH,EAASC,CAAO,EAChC,MAAMH,EAAG,UACLI,GACFJ,EAAG,eAAeI,CAAc,EAE3B,EACT,EACA,MAAM,OAAQ,CACZ,MAAMJ,EAAG,MAAM,CACjB,EACA,MAAM,MAAMM,EAAeC,EAAgBJ,EAAwB,CACjE,OAAO,MAAMH,EAAG,MAAMM,EAAOC,EAAQJ,CAAO,CAC9C,EACA,MAAM,KAAKG,EAAeH,EAAwB,CAChD,OAAO,MAAMH,EAAG,KAAKM,EAAOH,CAAO,CACrC,EACA,MAAM,YAAYK,EAAqC,CACrD,OAAO,MAAMR,EAAG,YAAaS,GACpBD,EAAiBE,EAAMD,CAAE,CAAC,CAClC,CACH,EACA,MAAM,aAAaE,EAAqB,CACtC,OAAO,MAAMX,EAAG,aAAaW,CAAO,CACtC,CACF,EAEQC,EAAOX,CAAM","names":["init_buffer","db","worker","dataDir","options","onNotification","PGlite","query","params","callback","tx","proxy","message","expose"]}